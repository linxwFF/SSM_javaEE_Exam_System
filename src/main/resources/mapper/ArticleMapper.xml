<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.common.dao.ArticleMapper" >
  <resultMap id="BaseResultMap" type="com.common.model.Article" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="user_id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="title" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="anthor" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="type_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="loadURL" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="tag" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="decoration" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="state" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="delete_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.common.model.Article" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="user_id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="title" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="anthor" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="type_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="loadURL" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="tag" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="decoration" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="state" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="delete_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="content" jdbcType="LONGVARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, title, anthor, type_id, loadURL, tag, decoration, state, update_time, 
    create_time, delete_time
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from article
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.common.model.Article" >
    insert into article (id, user_id, title, 
      anthor, type_id, loadURL, 
      tag, decoration, state, 
      update_time, create_time, delete_time, 
      content)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, 
      #{anthor,jdbcType=VARCHAR}, #{typeId,jdbcType=INTEGER}, #{loadurl,jdbcType=VARCHAR}, 
      #{tag,jdbcType=INTEGER}, #{decoration,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, 
      now(), now(), #{deleteTime,jdbcType=TIMESTAMP},
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.common.model.Article" >
    insert into article
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="anthor != null" >
        anthor,
      </if>
      <if test="typeId != null" >
        type_id,
      </if>
      <if test="loadurl != null" >
        loadURL,
      </if>
      <if test="tag != null" >
        tag,
      </if>
      <if test="decoration != null" >
        decoration,
      </if>
      <if test="state != null" >
        state,
      </if>

        update_time,
        create_time,

      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="anthor != null" >
        #{anthor,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null" >
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="loadurl != null" >
        #{loadurl,jdbcType=VARCHAR},
      </if>
      <if test="tag != null" >
        #{tag,jdbcType=INTEGER},
      </if>
      <if test="decoration != null" >
        #{decoration,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>

        now(),
        now(),

      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.common.model.Article" >
    update article
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="anthor != null" >
        anthor = #{anthor,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null" >
        type_id = #{typeId,jdbcType=INTEGER},
      </if>
      <if test="loadurl != null" >
        loadURL = #{loadurl,jdbcType=VARCHAR},
      </if>
      <if test="tag != null" >
        tag = #{tag,jdbcType=INTEGER},
      </if>
      <if test="decoration != null" >
        decoration = #{decoration,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
        update_time = now(),
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.common.model.Article" >
    update article
    set user_id = #{userId,jdbcType=BIGINT},
      title = #{title,jdbcType=VARCHAR},
      anthor = #{anthor,jdbcType=VARCHAR},
      type_id = #{typeId,jdbcType=INTEGER},
      loadURL = #{loadurl,jdbcType=VARCHAR},
      tag = #{tag,jdbcType=INTEGER},
      decoration = #{decoration,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      update_time = now(),
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.common.model.Article" >
    update article
    set user_id = #{userId,jdbcType=BIGINT},
      title = #{title,jdbcType=VARCHAR},
      anthor = #{anthor,jdbcType=VARCHAR},
      type_id = #{typeId,jdbcType=INTEGER},
      loadURL = #{loadurl,jdbcType=VARCHAR},
      tag = #{tag,jdbcType=INTEGER},
      decoration = #{decoration,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      update_time = now()
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="findAll_Table" resultType="com.modules.article.bo.ArticleListVo">
    SELECT
    a.id, a.user_id as userId, a.title, a.anthor, a.type_id as typeId, a.loadURL, a.tag, a.decoration, a.state,
    a.update_time as updateTime, a.create_time as createTime,content
    ,b.name as articleCategoryName
    FROM
    article as a
    left JOIN article_category as b on a.type_id = b.id
    where a.delete_time = '0000-00-00 00:00:00'
  </select>

  <select id="findAllByType" resultType="com.modules.article.bo.ArticleListVo" parameterType="java.lang.Integer">
    SELECT
    a.id, a.user_id as userId, a.title, a.anthor, a.type_id as typeId, a.loadURL, a.tag, a.decoration, a.state,
    a.update_time as updateTime, a.create_time as createTime,content
    ,b.name as articleCategoryName
    FROM
    article as a
    left JOIN article_category as b on a.type_id = b.id
    where a.delete_time = '0000-00-00 00:00:00'
    and type_id = #{type}
  </select>

  <!--分页-->
  <sql id="limit_sql">
    <if test="page_sql != null and page_sql != ''">
      ${page_sql}
    </if>
  </sql>

  <sql id="where_all">
    <where>
      <if test="findContent != null and findContent !='' ">
        and (
        LOWER(a.title) like  LOWER(CONCAT("%",#{findContent,jdbcType=VARCHAR},"%"))
        )
      </if>
      and a.delete_time = '0000-00-00 00:00:00'
      <if test="type != null and type !=''">
        and a.type_id = #{type}
      </if>
    </where>
  </sql>

  <select id="findAll" resultType="com.modules.article.bo.ArticleListVo">
    SELECT
    a.id, a.user_id as userId, a.title, a.anthor, a.type_id as typeId, a.loadURL, a.tag, a.decoration, a.state,
    a.update_time as updateTime, a.create_time as createTime,content
    ,b.name as articleCategoryName
    FROM
    article as a
    left JOIN article_category as b on a.type_id = b.id
    <include refid="where_all" />
    <include refid="limit_sql" />
  </select>

  <select id="findCount" resultMap="BaseResultMap">
    select count(a.id) from  article as a
    left JOIN article_category as b on a.type_id = b.id
    <include refid="where_all" />
  </select>
</mapper>